/*=============================================================================
	SampleNativePackage.h
	Copyright 1997-1999 Epic Games, Inc. All Rights Reserved.

	This is a minimal example of how to mix UnrealScript and C++ code
	within a class (defined by SampleClass.uc and SampleClass.cpp),
	for a package (defined by SamplePackage.u and SamplePackage.dll).
=============================================================================*/

// Unreal engine includes.
#include "Engine.h"

// Glue logic -- must match your package name.
// If you forget this, you get VC++ compile errors like:
// C:\Unreal\SampleNativePackage\Src\SampleClass.cpp(38) : warning C4273: 'execSampleNativeFunction' : inconsistent dll linkage.  dllexport assumed.
#define SAMPLENATIVEPACKAGE_API DLL_EXPORT

// Automatically generated class definitions.
// These are generated by running "ucc make -nobind".
//
// If you get an error that this file was not found, that's because
// you haven't generated it yet! So:
// 1. Edit Unreal\System\UnrealTournament.ini.
// 2. To the list of "EditPackage=", add "EditPackage=SampleNativePackage".
// 3. Run "ucc make -nobind"
//
// If you forget this, then the C++ code won't have access to any
// of the UnrealScript declarations thus will be rendered useless.
//
// Examine this file to get a feeling for the kind of "stub" code ucc.exe
// generates to glue UnrealScript and C++ code together.
#include "SampleNativePackageClasses.h"

/*-----------------------------------------------------------------------------
	The End.
-----------------------------------------------------------------------------*/
